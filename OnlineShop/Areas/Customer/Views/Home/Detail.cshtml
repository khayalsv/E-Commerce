@model Product

@{ ViewData["Title"] = "Detail"; }

@using Microsoft.AspNetCore.Http
@using OnlineShop.Utility

@inject IHttpContextAccessor HttpContextAccessor

@{ var products = HttpContextAccessor.HttpContext.Session.Get<List<Product>>("products");  //<-session set(products)

    Product product = null;

    if (products != null)
    {
        product = products.FirstOrDefault(x => x.Id == Model.Id);
    }
 }
<br />

<h2 class="text-info">Product Details</h2>

<form asp-action="Detail" method="post" enctype="multipart/form-data">
    <div class="p-4 rounded border">
        <div asp-validation-summary="ModelOnly" class="text-danger">


        </div>
        <div class="form-group row">
            <div class="col-2">
                <label asp-for="Name"></label>
            </div>
            <div class="col-5">
                <input asp-for="Name" class="form-control" />
            </div>
            <span asp-validation-for="Name" class="text-danger"></span>
        </div>

        <div class="form-group row">
            <div class="col-2">
                <label asp-for="Price"></label>
            </div>
            <div class="col-5">
                <input asp-for="Price" class="form-control" />
            </div>
            <span asp-validation-for="Price" class="text-danger"></span>
        </div>

        <div class="form-group row">
            <div class="col-2">
                <label asp-for="ProductColor"></label>
            </div>
            <div class="col-5">
                <input asp-for="ProductColor" class="form-control" />
            </div>
            <span asp-validation-for="ProductColor" class="text-danger"></span>
        </div>

        <div class="form-group row">
            <div class="col-2">
                <label asp-for="ProductTypeId"></label>
            </div>
            <div class="col-5">
                @*<select asp-for="ProductTypeId" asp-items="ViewBag.productTypeId" class="form-control"></select>*@
                <input asp-for="ProductTypeId" class="form-control" />
            </div>
            <span asp-validation-for="ProductTypeId" class="text-danger"></span>
        </div>

        <div class="form-group row">
            <div class="col-2">
                <label asp-for="Image"></label>
            </div>
            <div class="col-5">
                <input asp-for="Image" class="form-control" type="file" />
            </div>
            <span asp-validation-for="Image" class="text-danger"></span>
        </div>

        <div class="form-group row">
            <div class="col-2">


            </div>
            <div class="col-5">
                @if (product != null)
                {
    <button type="submit" class="btn btn-danger form-control" asp-action="Remove" asp-route-id="@Model.Id">Remove to Cart</button>}
else
{
<input type="submit" class="btn btn-info form-control" value="Add To Cart" />}
            </div>
        </div>

        <div class="form-group">
            <a asp-action="Index" class="btn btn-success">Back to List</a>
        </div>

        <div class="col-2"></div>
        <div class="col-5">
            <img src="~/@Model.Image" style="width:100%; height:250px" />

            @if (Model.IsAvailable)
            {
<h3>In Stock</h3> }
else
{
<h3>Not stock</h3>}

        </div>
    </div>
</form>

@section Scripts{
    @{await Html.RenderPartialAsync(partialViewName: "_ValidationScriptsPartial");}
}